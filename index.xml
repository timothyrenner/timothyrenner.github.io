<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Timothy Renner</title><link>https://timothyrenner.github.io/</link><description>Recent content on Timothy Renner</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 15 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://timothyrenner.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Movie Year in Review: 2020</title><link>https://timothyrenner.github.io/movies-year-in-review/2020/</link><pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate><guid>https://timothyrenner.github.io/movies-year-in-review/2020/</guid><description>106 Movies Watched The year it started. COVID had just hit, and I was on year 2 of my Shudder subscription when my sister and I decided to watch the second season of The Last Drive In with Joe Bob Briggs. That turned out to be an amazing and &amp;hellip; eye opening double feature of Chopping Mall and Bloodsucking Freaks. I&amp;rsquo;ve always been a movie buff, but this was when I started recording which ones I watched.</description></item><item><title>Movies</title><link>https://timothyrenner.github.io/movies/</link><pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate><guid>https://timothyrenner.github.io/movies/</guid><description>I watch a lot of movies, mostly horror. About three years ago or so I started tracking them too, eventually trying to figure out what I&amp;rsquo;d do with that data once I had it. This is what I landed on, for now.
Years in Review 2020
Why would I do this? I built out the &amp;ldquo;stack&amp;rdquo; several times, with the current version landing on a combination of Obsidian for the UI (I don&amp;rsquo;t do front ends), Golang for the backend, SQLite for the &amp;ldquo;application&amp;rdquo; data store, and DuckDB + DBT for the &amp;ldquo;data warehouse&amp;rdquo;.</description></item><item><title>SQL Hell, Warm Up</title><link>https://timothyrenner.github.io/posts/sql-hell-warm-up/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://timothyrenner.github.io/posts/sql-hell-warm-up/</guid><description>Do you consider yourself an explorer in the furthest regions of programming experience? Do you like pushing the boundaries of proper practice and good taste when it comes to solving programming problems? Have you ever wondered - I bet I could solve that with SQL?
Me too. And it turns out in many cases, you can. Often you shouldn&amp;rsquo;t, but you can. In this post and the next couple I&amp;rsquo;m going to be exploring the furthest reaches of what we can do with the database language every dev knows at least a little bit of.</description></item><item><title>About</title><link>https://timothyrenner.github.io/about/</link><pubDate>Sun, 04 Dec 2022 08:40:07 -0600</pubDate><guid>https://timothyrenner.github.io/about/</guid><description>Machine learning engineer, data scientist, and data engineer. I enjoy making data work, whether that means collection, modeling, transformation, or deployment.
Sometimes &amp;ldquo;work&amp;rdquo; is really just pointless stuff. I try to find ways to learn new skills by doing something dumb.
Repos / Projects Here&amp;rsquo;s a sample of some dumb stuff I work on.
Spotify Smart Playlists - Automated workflows for making configuration driven Spotify playlists using DVC, DuckDB, and Github Actions.</description></item><item><title>Finding Bigfoot with Dash, Part 3</title><link>https://timothyrenner.github.io/posts/bigfoot-with-dash-part-3/</link><pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate><guid>https://timothyrenner.github.io/posts/bigfoot-with-dash-part-3/</guid><description>Adding a search bar to the Bigfoot report titles and wiring it to the sightings map and plots.
Part 1: Map
Part 2: Plots
Part 3: Interactions
Warning
I wrote this when Plotly Dash was brand new. Though the fundamental process and setup is the same, some of the details are quite a bit simpler now than they were when I wrote this.
In particular, the Dash Bootstrap Components library replaces the manually set CSS classes and works really well.</description></item><item><title>Finding Bigfoot with Dash, Part 2</title><link>https://timothyrenner.github.io/posts/bigfoot-with-dash-part-2/</link><pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate><guid>https://timothyrenner.github.io/posts/bigfoot-with-dash-part-2/</guid><description>Building the plots necessary to find Bigfoot with Plotly&amp;rsquo;s Dash framework.
Part 1: Map
Part 2: Plots
Part 3: Interactions
Warning
I wrote this when Plotly Dash was brand new. Though the fundamental process and setup is the same, some of the details are quite a bit simpler now than they were when I wrote this.
In particular, the Dash Bootstrap Components library replaces the manually set CSS classes and works really well.</description></item><item><title>Finding Bigfoot with Dash, Part 1</title><link>https://timothyrenner.github.io/posts/bigfoot-with-dash-part-1/</link><pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate><guid>https://timothyrenner.github.io/posts/bigfoot-with-dash-part-1/</guid><description>Building a map of Bigfoot sightings with Plotly&amp;rsquo;s Dash framwork.
Part 1: Map
Part 2: Plots
Part 3: Interactions
Warning
I wrote this when Plotly Dash was brand new. Though the fundamental process and setup is the same, some of the details are quite a bit simpler now than they were when I wrote this.
In particular, the Dash Bootstrap Components library replaces the manually set CSS classes and works really well.</description></item></channel></rss>